{
  "name": "React Resumable JS",
  "tagline": "A React component for upload files with Resumable JS",
  "body": "# React Resumable JS\r\n\r\nCreates an uploader component in React, to use with [Resumable JS.](http://www.resumablejs.com/)\r\n\r\n[![NPM](https://nodei.co/npm/react-resumable-js.png?downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/react-resumable-js/)\r\n\r\n[![CircleCI](https://circleci.com/gh/Artear/ReactResumableJS.svg)](https://circleci.com/gh/Artear/ReactResumableJS) [![CircleCI](https://circleci.com/gh/Artear/ReactResumableJS.svg?style=shield)](https://circleci.com/gh/Artear/ReactResumableJS)\r\n\r\nOn file added, the upload will begin.\r\n\r\n### Changelog:\r\n- 1.1.5\r\n    - added custom dropTargetId\r\n- 1.1.4\r\n    - added support to video and others in preview list\r\n    - added npm run demo command\r\n- 1.1.3\r\n    - fixed example\r\n- 1.1.2\r\n    - changed unique identifier\r\n    - changed option onFileSuccess, now return file uploaded and server message\r\n- 1.1.0\r\n    - Removed property options\r\n    - Now all options are properties ( see the example )\r\n    - Refactor: functions to arrow functions\r\n    \r\n\r\n### Install\r\n`npm i react-resumable-js`\r\n\r\n### Options\r\n- uploaderID The uploader ID. Ex: \"image-upload\"\r\n- dropTargetID The dropTarget ID. Ex: \"myDropTarget\"\r\n- fileAccept content type file accept on input file Ex: 'image/*'\r\n- filetypes The allowed files extensions to upload. Ex: \"['jpg', 'png']\"\r\n- fileAddedMessage The message to print when file is added. Optional. Ex: 'Starting....'\r\n- completedMessage The message to print when file is completely uploaded. Optional. Ex: 'Completed!'\r\n- service The service that will receive the file. Ex: 'http://www.someurl.com/myservice/image.json'\r\n- textLabel The label of the upload. Ex: 'What photo do you want to add?'\r\n- previousText A Text that will be displayed before the component. Optional.\r\n- disableDragAndDrop True to disable Drag and Drop. Enable by default.\r\n- onUploadErrorCallback Function to call on Upload error. @returns file and message\r\n- onFileAddedError Function to call on File Added error. @returns file and errorCount\r\n- headerObject Optional, if you need to add a headers object.\r\n- onFileSuccess Method to call when file is upload. Usually a method to set the filename that was uploaded by the component.\r\n\r\n### Folders\r\n- build: last deploy build\r\n- example: webpack dev server to run the demo\r\n    - server: nodejs server to upload the files\r\n- src: source code\r\n\r\n### Example \r\n\r\n```javascript\r\nexport default class ExampleForm extends React.Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n  \r\n      return (\r\n        <fieldset>\r\n          <p>You can add other inputs, selects or stuff right here to complete a form.</p>\r\n          <ReactResumableJs\r\n            uploaderID=\"image-upload\"\r\n            dropTargetID=\"myDropTarget\"\r\n            filetypes={[\"jpg\", \"png\"]}\r\n            fileAccept=\"image/*\"\r\n            fileAddedMessage=\"Started!\"\r\n            completedMessage=\"Complete!\"\r\n            service=\"http://localhost:3000/upload\"\r\n            textLabel=\"Uploaded files\"\r\n            previousText=\"Drop to upload your media:\"\r\n            disableDragAndDrop={true}\r\n            onFileSuccess={(file, message) => {\r\n              console.log(file, message);\r\n            }}\r\n            onFileAdded={(file, resumable) => {\r\n              resumable.upload();\r\n            }}\r\n          />\r\n        </fieldset>\r\n      );\r\n    }\r\n});\r\n```\r\n\r\n### Demo\r\n`npm run demo`",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}